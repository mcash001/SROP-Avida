##############################################################################
#
# This is the setup file for the events system.  From here, you can
# configure any actions that you want to have happen during the course of
# an experiment, including setting the times for data collection.
#
# basic syntax: [trigger] [start:interval:stop] [action/event] [arguments...]
#
# This file is currently setup to record key information every 100 updates.
#
# For information on how to use this file, see:  doc/events.html
# For other sample event configurations, see:  support/config/
#
##############################################################################

# Seed the population with a single organism
u begin Inject default-heads.org

# Print all of the standard data files...
u 0:500:end PrintAverageData       # Save info about they average genotypes
u 0:500:end PrintDominantData      # Save info about most abundant genotypes
u 0:500:end PrintCountData         # Count organisms, genotypes, species, etc.
u 0:500:end PrintTasksData         # Save organisms counts for each task.
u 0:500:end PrintTimeData          # Track time conversion (generations, etc.)
u 0:500:end PrintResourceData      # Track resource abundance.
u 0:500:end PrintStatsData         # Print all of the miscellanous population statistics

u 50:50:end SetReactionValueMult NOT -1      # Alternate NOT Reward/Risk
u 50:50:end SetReactionValueMult NAND -1     # Alternate NAND Reward/Risk
# u 0:50:end SetReactionValue *Task* 0       # Will be used to set neutral task



# A few data files not printed by default
# u 100:100 PrintDominantGenotype    # Save the most abundant genotypes
# u 100:100:end PrintErrorData       # Std. Error on averages.
# u 100:100:end PrintVarianceData    # Variance on averages.
# u 100:100:end PrintTotalsData      # Total counts over entire run.
# u 100:100:end PrintTasksExeData    # Num. times tasks have been executed.
# u 100:100:end PrintTasksQualData   # Task quality information

# Setup the exit time and full population data collection.
u 0:500:end SavePopulation         # Save current state of population.
u 10000 Exit                        # exit
